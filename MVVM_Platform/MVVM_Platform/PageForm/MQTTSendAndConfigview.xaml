<UserControl
    x:Class="MVVM_Platform.MQTTSendAndConfigview"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cov="clr-namespace:Assets;assembly=Assets"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:MVVM_Platform"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="600"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <cov:InIntValueConverter x:Key="InValueConverter" />
                    <cov:OSValueConverter x:Key="QosConverter" />
                </ResourceDictionary>

                <ResourceDictionary Source="pack://application:,,,/Assets;component/Styles/ButtonStyles.xaml" />
                <ResourceDictionary>
                    <Style x:Key="ExpanderStyle2" TargetType="{x:Type Expander}">
                        <Setter Property="IsExpanded" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Expander}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>

                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter
                                                    VerticalAlignment="Center"
                                                    Content="{TemplateBinding Header}"
                                                    ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                                <ToggleButton
                                                    x:Name="HeaderSite"
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Left"
                                                    Background="Transparent"
                                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Style="{DynamicResource ExpanderToggleButtonStyle}" />
                                            </Grid>
                                        </Border>
                                        <ContentPresenter
                                            x:Name="ExpandSite"
                                            Grid.Row="1"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Focusable="False"
                                            Visibility="Collapsed" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="True">
                                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="Gainsboro" />
                        <Setter Property="FontSize" Value="15" />
                        <Setter Property="FontFamily" Value="宋体" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Width" Value="50" />
                        <Setter Property="Padding" Value="5,5" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Canvas
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="True">

                                        <Canvas
                                            x:Name="canvNormal"
                                            Canvas.Right="5"
                                            Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="True"
                                            Visibility="Visible">
                                            <Path
                                                Canvas.Top="10"
                                                Canvas.Right="5"
                                                Data="M 0 0 L 6 6  12 0 "
                                                Stroke="Black"
                                                StrokeThickness="2" />
                                            <Path
                                                Canvas.Top="15"
                                                Canvas.Right="5"
                                                Data="M 0 0 L 6 6  12 0 "
                                                Stroke="Black"
                                                StrokeThickness="2" />
                                        </Canvas>
                                        <Canvas
                                            x:Name="canvChecked"
                                            Canvas.Right="5"
                                            Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="True"
                                            Visibility="Hidden">
                                            <Path
                                                Canvas.Top="15"
                                                Canvas.Right="5"
                                                Data="M 0 0 L 6 -6  12 0 "
                                                Stroke="Black"
                                                StrokeThickness="2" />
                                            <Path
                                                Canvas.Top="20"
                                                Canvas.Right="5"
                                                Data="M 0 0 L 6 -6  12 0 "
                                                Stroke="Black"
                                                StrokeThickness="2" />
                                        </Canvas>

                                        <ContentPresenter
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    </Canvas>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" Value="SlateGray" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="canvChecked" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="canvNormal" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="Gray" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <ControlTemplate x:Key="roundbutton" TargetType="Button">
                        <Grid>
                            <Ellipse
                                x:Name="ep"
                                Fill="{TemplateBinding Background}"
                                Stroke="{Binding Foreground}"
                                StrokeThickness="-1" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="ep"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                To="{TemplateBinding Background}"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="ep"
                                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                To="OrangeRed"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <!--<ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="ep" Property="Fill" Value="Yellow" />
                </Trigger>
            </ControlTemplate.Triggers>-->
                    </ControlTemplate>

                    <Style x:Key="rubtionStyle" TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Border
                                            x:Name="bor"
                                            Background="Red"
                                            BorderBrush="Red"
                                            BorderThickness="10"
                                            ClipToBounds="True"
                                            CornerRadius="50" />

                                        <Border CornerRadius="5" />
                                        <Border Background="{TemplateBinding Background}" CornerRadius="4" />
                                        <Border
                                            Name="mask"
                                            Background="#11000000"
                                            CornerRadius="5"
                                            Visibility="Collapsed" />
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="mask" Property="Visibility" Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="bor" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>

                                        <Border
                                            Margin="30,0,30,0"
                                            BorderBrush="LightSeaGreen"
                                            BorderThickness="1"
                                            CornerRadius="5">
                                            <Border
                                                Name="bd"
                                                Background="AntiqueWhite"
                                                CornerRadius="5"
                                                Visibility="Collapsed" />
                                        </Border>

                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            TextBlock.Foreground="LightSeaGreen" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="bd" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ada" TargetType="{x:Type ListViewItem}">
                        <Setter Property="Margin" Value="10,0,10,0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Background="Aqua" CornerRadius="5" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="ListViewItem">
                        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="8,5" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Margin" Value="0,2,6,2" />
                        <Setter Property="Height" Value="50" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Grid Name="root" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition MaxWidth="30" />
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="30" />
                                        </Grid.ColumnDefinitions>
                                        <!--<Grid.InputBindings>
                                            <MouseBinding
                                                Command="{Binding DataContext.OpenViewCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                MouseAction="LeftDoubleClick" />
                                        </Grid.InputBindings>-->
                                        <Border
                                            x:Name="Bd"
                                            Grid.ColumnSpan="4"
                                            Margin="0,5,0,0"
                                            Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="10"
                                            SnapsToDevicePixels="true" />
                                        <Border
                                            Name="brS"
                                            Width="10"
                                            Margin="5,6,0,2"
                                            HorizontalAlignment="Left"
                                            Background="LightGreen"
                                            BorderThickness="2" />
                                        <TextBlock
                                            x:Name="TB"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Foreground="Black"
                                            Text="{Binding Topic}" />
                                        <TextBlock
                                            x:Name="TB1"
                                            Grid.Column="2"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Foreground="Black"
                                            Text="QoS" />
                                        <TextBlock
                                            x:Name="TB2"
                                            Grid.Column="3"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Foreground="Black"
                                            Text="{Binding Qos, Converter={StaticResource QosConverter}}" />
                                        <Button
                                            Name="btn"
                                            Grid.Column="3"
                                            Width="15"
                                            Height="15"
                                            Margin="2,-3,0,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Background="Red"
                                            Command="{Binding DataContext.DelateCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                            CommandParameter="{Binding}"
                                            Content="X"
                                            Template="{StaticResource roundbutton}"
                                            Visibility="Collapsed" />

                                        <ItemsPresenter
                                            x:Name="ItemsHost"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="1"
                                            Margin="8,0,12,0" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Bd" Property="Background" Value="#11000000" />
                                            <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Bd" Property="Background" Value="#2D3F49" />
                                            <Setter TargetName="brS" Property="Background" Value="DarkOliveGreen" />
                                            <Setter TargetName="TB" Property="Foreground" Value="#FFFFFF" />
                                            <Setter TargetName="TB1" Property="Foreground" Value="#FFFFFF" />
                                            <Setter TargetName="TB2" Property="Foreground" Value="#FFFFFF" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel>


        <Grid DockPanel.Dock="Top">
            <!--<Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel
                Grid.Row="0"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <TextBlock d:Text="测试" Text="{Binding Client.Model.Name}" />
            </StackPanel>-->
            <Expander
                Header="{Binding Client.Model.Name}"
                IsExpanded="True"
                Style="{StaticResource ExpanderStyle2}">
                <Grid Grid.Row="1" Height="150">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Label
                            VerticalAlignment="Center"
                            Content="*"
                            FontSize="15"
                            Foreground="Red" />
                        <Label HorizontalAlignment="Left" Content="名称" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Label
                            VerticalAlignment="Center"
                            Content="*"
                            FontSize="15"
                            Foreground="Red" />
                        <Label HorizontalAlignment="Left" Content="Client ID" />
                    </StackPanel>
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Label HorizontalAlignment="Left" Content="用户名" />
                    </StackPanel>
                    <TextBox
                        Grid.Row="1"
                        Margin="5,5,30,5"
                        Text="{Binding Client.Model.Name}" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="5,5,30,5"
                        Text="{Binding Client.Model.ClientID}" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="5,5,30,5"
                        Text="{Binding Client.Model.UserName}" />
                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <Label HorizontalAlignment="Left" Content="密码" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label HorizontalAlignment="Left" Content="Keep Alive" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="2"
                        Orientation="Horizontal">
                        <Label HorizontalAlignment="Left" Content="Clean Start" />
                    </StackPanel>
                    <TextBox
                        Grid.Row="3"
                        Margin="5,5,30,5"
                        Text="{Binding Client.Model.UserPassWord}" />
                    <TextBox
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="5,5,30,5"
                        Text="{Binding Client.Model.KeepAlive}" />
                    <CheckBox
                        Grid.Row="3"
                        Grid.Column="2"
                        Margin="5,5,30,5"
                        IsChecked="{Binding Client.Model.CleanStart}" />
                    <Button
                        Grid.Row="4"
                        Grid.Column="2"
                        Command="{Binding ConnectCommand}"
                        Content="连接"
                        Style="{StaticResource ButtonStyle}" />
                </Grid>
            </Expander>
        </Grid>

        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button
                    Margin="0,10,0,10"
                    Command="{Binding AddSubscribeCommand}"
                    CommandParameter="{Binding}"
                    Content=" +  添加订阅"
                    Style="{StaticResource ButtonStyle}" />
                <ListView Grid.Row="1" ItemsSource="{Binding Client.Model.listTopic}" />
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <ComboBox Width="50" Margin="10,2,0,2" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        Content="全部"
                        IsChecked="{Binding Accept, Converter={StaticResource InValueConverter}, ConverterParameter=0}" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        Content="已接收"
                        IsChecked="{Binding Accept, Converter={StaticResource InValueConverter}, ConverterParameter=1}" />
                    <RadioButton
                        VerticalContentAlignment="Center"
                        Content="已发送"
                        IsChecked="{Binding Accept, Converter={StaticResource InValueConverter}, ConverterParameter=2}" />

                </StackPanel>
                <ListView Grid.Row="1" />

                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Height="20" Orientation="Horizontal">
                        <ComboBox Width="50" />
                        <ComboBox Width="50" />
                        <RadioButton VerticalContentAlignment="Center" Content="Retain" />
                        <ToggleButton Content="Meta" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        Height="20"
                        Orientation="Horizontal">
                        <TextBlock />
                        <ComboBox />
                    </StackPanel>
                    <TextBox Grid.Row="2" />
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
